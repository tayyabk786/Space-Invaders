import pygame
import math
import random

# Initialize pygame
pygame.init()

# Create the screen for the game
screen = pygame.display.set_mode((800, 600))

# Load background image
background = pygame.image.load("MainFolder/images/backg.png")

# Set title and icon of the game
pygame.display.set_caption("Alien Invaders")
icon = pygame.image.load("MainFolder/images/ufo.png")
pygame.display.set_icon(icon)

# Player
playerImg = pygame.image.load("MainFolder/images/spaceship.png")
playerX = 370
playerY = 480
playerX_change = 0

# Enemy
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 7

for h in range(num_of_enemies):
    enemyImg.append(pygame.image.load("MainFolder/images/alien-2.png"))
    enemyX.append(random.randint(0, 735))
    enemyY.append(random.randint(50, 150))
    enemyX_change.append(3)
    enemyY_change.append(40)

# Bullet
bulletImg = pygame.image.load("MainFolder/images/bullet-4.png")
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 5
bullet_state = "ready"

score = 0

def player(x, y):
    screen.blit(playerImg, (x, y))

def enemy(x, y, h):
    screen.blit(enemyImg[h], (x, y))

def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg, (x + 16, y + 10))

def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY - bulletY, 2)))
    if distance < 27:
        return True
    else:
        return False

# Game loop and event handler
running = True
selected_option = None

while running:
    screen.fill((32, 32, 32))
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Handle mouse button click
        if event.type == pygame.MOUSEBUTTONDOWN and selected_option is not None:
            if selected_option == 0:
                # Start the game (replace with game code)
                print("Starting the game")

        # Handle keyboard input
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change = -5
            if event.key == pygame.K_RIGHT:
                playerX_change = 5
            if event.key == pygame.K_ESCAPE:
                if bullet_state == "ready":
                    bulletX = playerX
                    fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_RIGHT or event.key == pygame.K_LEFT:
                playerX_change = 0

    # ... Rest of the game loop code ...

    pygame.display.update()
